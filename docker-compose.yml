services:
    api:
        build:
            context: ./api
            dockerfile: Dockerfile.dev
        command: npm run start:dev
        container_name: api
        env_file:
            - .env
        environment:
            - NODE_ENV=development
            - DATABASE_URL=${DATABASE_URL}
            - SECRET_KEY=${SECRET_KEY}
            - EXPIRES_IN=${EXPIRES_IN}
        ports:
            - 3000:3000
        volumes:
            - /app/node_modules
            - ./api/src:/app/src
        depends_on:
            - redis
            - postgres
            - elasticsearch
        networks:
            - private
            - public
    redis: # Name of container
        image: redis
        ports:
            - 6379:6379
        volumes:
            - redis:/data
        networks:
            - private
    postgres:
        image: postgres:15.0
        restart: unless-stopped
        env_file: .env
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "6543:5432"
        volumes:
            - postgresdata:/var/lib/postgresql/data
        networks:
            - private
            - public

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        ports:
            - 8080:8080
        restart: unless-stopped
        env_file: .env
        environment:
            - SECRET_KEY=${SECRET_KEY}
        volumes:
            - ./frontend:/client
            - /client/node_modules
            - /client/.next
        depends_on:
            - api
            - recommender
        networks:
            - public

    elasticsearch:
        image: elasticsearch:7.13.0
        container_name: elasticsearch
        env_file: .env
        environment:
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
            - ELASTIC_USERNAME=${ELASTIC_USERNAME}
            - ELASTIC_NODE=${ELASTIC_NODE}
        restart: unless-stopped
        networks:
            - private
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
    recommender:
        build:
            context: ./recommender
            dockerfile: Dockerfile.dev
        ports:
            - 5001:5000
        restart: unless-stopped
        env_file: .env
        volumes:
            - ./recommender/:/app
        depends_on:
            - api
        networks:
            - private
networks:
    private:
    public:
volumes:
    postgresdata:
    pgadmin-data:
    esdata:
        driver: local
    redis:
        driver: local
