services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      # Only will build development stage from our dockerfile
    # Run in dev Mode: npm run start:dev
    command: npm run start:watch
    env_file:
        - .env
    environment:
        - NODE_ENV=development
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - 3000:3000
    volumes:
      - /app/node_modules
      - ./api/src:/app/src
    depends_on:
      - redis
      - postgres
      - elasticsearch
  redis: # Name of container
    image: redis
    ports:
      - 6379:6379
    volumes: 
      - redis:/data
  postgres:
    image: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: 
      - '6543:5432'
    volumes:
      - postgresdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - "5050:80"
    env_file: .env
    links:
      - postgres:postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 8080:8080
    restart: unless-stopped
    volumes:
      - ./frontend:/client
      - /client/node_modules
      - /client/.next
    depends_on:
      - api

  elasticsearch:
    image: elasticsearch:7.13.0
    container_name: elasticsearch
    env_file: .env
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_NODE=${ELASTIC_NODE}
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  kibana:
    container_name: kibana
    image: kibana:7.13.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  postgresdata:
  pgadmin-data:
  esdata:
    driver: local
  redis:
    driver: local
